import{_ as i,c as s,o as a,V as e}from"./chunks/framework.qP9-rlTe.js";const b=JSON.parse('{"title":"构建一个插件","description":"","frontmatter":{},"headers":[],"relativePath":"zh/plugins/getting-started/build-a-plugin.md","filePath":"zh/plugins/getting-started/build-a-plugin.md","lastUpdated":1705556984000}'),l={name:"zh/plugins/getting-started/build-a-plugin.md"},n=e(`<h1 id="构建一个插件" tabindex="-1">构建一个插件 <a class="header-anchor" href="#构建一个插件" aria-label="Permalink to &quot;构建一个插件&quot;">​</a></h1><hr><p>插件可让您使用自己的功能扩展 Obsidian，以创建自定义笔记体验。 在本教程中，您将从源代码编译示例插件并将其加载到 Obsidian 中。</p><h2 id="学习内容" tabindex="-1">学习内容 <a class="header-anchor" href="#学习内容" aria-label="Permalink to &quot;学习内容&quot;">​</a></h2><p>完成本教程后，您将能够：</p><ul><li>配置开发 Obsidian 插件的环境。</li><li>从源代码编译插件。</li><li>对插件进行更改后重新加载插件。</li></ul><h2 id="先决条件" tabindex="-1">先决条件 <a class="header-anchor" href="#先决条件" aria-label="Permalink to &quot;先决条件&quot;">​</a></h2><p>若要完成本教程，需要：</p><ul><li>Git 已安装在本地计算机上。</li><li>具备Node.js 本地开发环境。</li><li>代码编辑器，例如 Visual Studio Code。</li></ul><h2 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h2><p>在开发插件时，一个错误可能会导致您的Obsidian库发生意外更改。为防止数据丢失，您永远不应该在主库中开发插件，应始终使用专用于插件开发的单独库。</p><p><a href="https://help.obsidian.md/Getting+started/Create+a+vault#Create+empty+vault" target="_blank" rel="noreferrer">创建一个空的保管库</a>。</p><h2 id="第-1-步-下载示例插件" tabindex="-1">第 1 步：下载示例插件 <a class="header-anchor" href="#第-1-步-下载示例插件" aria-label="Permalink to &quot;第 1 步：下载示例插件&quot;">​</a></h2><p>在此步骤中，您需要将示例插件模板下载到保管库的 <code>.obsidian</code> 目录中的 <code>plugins</code> 目录，以便 Obsidian 可以找到它。</p><p>您将在本教程中使用的示例插件位于 <a href="https://github.com/obsidianmd/obsidian-sample-plugin" target="_blank" rel="noreferrer">GitHub 存储库</a>中。</p><ol><li>打开终端窗口，将项目目录更改为该 <code>plugins</code> 目录。</li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> path/to/vault</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .obsidian/plugins</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .obsidian/plugins</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="2"><li>使用 Git 克隆示例插件模板。</li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/obsidianmd/obsidian-sample-plugin.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>GitHub 模板存储库</p><p>示例插件的存储库是 GitHub 模板存储库，这意味着您可以从示例插件创建自己的存储库。要了解如何操作，请参阅从<a href="https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-repository-from-a-template#creating-a-repository-from-a-template" target="_blank" rel="noreferrer">模板创建存储库</a>。</p><p>请记住在克隆示例插件时使用您自己的存储库的 URL。</p></blockquote><h2 id="第-2-步-构建插件" tabindex="-1">第 2 步：构建插件 <a class="header-anchor" href="#第-2-步-构建插件" aria-label="Permalink to &quot;第 2 步：构建插件&quot;">​</a></h2><p>在此步骤中，您将编译示例插件，以便 Obsidian 可以加载它。</p><ol><li><p>导航到插件目录。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> obsidian-sample-plugin</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>安装依赖项。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>编译源代码。以下命令在终端中保持运行，并在您修改源代码时重新构建插件。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ol><p>请注意，插件目录现在多了一个 <code>main.js</code> 文件，其中包含插件的编译版本。</p><h2 id="第-3-步-启用插件" tabindex="-1">第 3 步：启用插件 <a class="header-anchor" href="#第-3-步-启用插件" aria-label="Permalink to &quot;第 3 步：启用插件&quot;">​</a></h2><p>要在 Obsidian 中加载插件，您首先需要启用它。</p><ol><li>在黑曜石中，打开设置。</li><li>在侧边菜单中，选择社区插件。</li><li>选择启用社区插件。</li><li>在“已安装的插件”下，通过选择旁边的切换按钮来启用示例插件。</li></ol><p>您现在可以在 Obsidian 中使用该插件了。接下来，我们将对插件进行一些更改。</p><h2 id="第-4-步-更新插件清单" tabindex="-1">第 4 步：更新插件清单 <a class="header-anchor" href="#第-4-步-更新插件清单" aria-label="Permalink to &quot;第 4 步：更新插件清单&quot;">​</a></h2><p>在此步骤中，您将通过更新插件清单 来 <code>manifest.json</code> 重命名插件。清单包含有关插件的信息，例如其名称和描述。</p><ol><li>在代码编辑器中打开 <code>manifest.json</code> 。</li><li>更改 <code>id</code> 唯一标识符，例如 <code>&quot;hello-world&quot;</code> .</li><li>更改 <code>name</code> 名称，例如 <code>&quot;Hello world&quot;</code> .</li><li>重新启动 Obsidian 以加载对插件清单的新更改。</li></ol><p>返回到已安装的插件，请注意插件的名称已更新，以反映您所做的更改。</p><p>请记住，每当您对<code>manifest.json</code>进行更改时，请重新启动  Obsidian。</p><h2 id="第-5-步-更新源代码" tabindex="-1">第 5 步：更新源代码 <a class="header-anchor" href="#第-5-步-更新源代码" aria-label="Permalink to &quot;第 5 步：更新源代码&quot;">​</a></h2><p>要让用户与您的插件交互，请添加一个功能区图标，在用户选择它时向用户弹出消息。</p><ol><li><p>在代码编辑器中打开 <code>main.ts</code> 。</p></li><li><p>将类名从 <code>MyPlugin</code> 重命名 <code>HelloWorldPlugin</code> 。</p></li><li><p>导入<code>obsidian</code>包 中的依赖组件。</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Notice, Plugin } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;obsidian&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>在 <code>onload()</code>方法中 ，添加以下代码：</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addRibbonIcon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;dice&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Greet&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Notice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello, world!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>在Obsidian“命令”面板中，选择“重新加载Obsidian而不保存当前编辑内容”以重新加载插件。</p></li></ol><p>您现在可以在Obsidian窗口左侧的功能区中看到一个骰子图标。选择它以在右上角显示一条消息。</p><p>请记住，您需要在更改源代码后重新加载插件，方法是禁用它，然后在社区插件面板中再次启用它，或者使用命令面板，如本步骤的第 5 部分所述。</p><blockquote><p>热重载</p><p>安装 <a href="https://github.com/pjeby/hot-reload" target="_blank" rel="noreferrer">Hot-Reload</a> 插件以在开发时自动重新加载插件。</p></blockquote><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>在本教程中，你已使用 TypeScript API 构建了第一个 Obsidian 插件。您已经修改了插件并重新加载了它，以让 Obsidian 更改生效。</p>`,41),t=[n];function p(d,h,r,o,c,k){return a(),s("div",null,t)}const g=i(l,[["render",p]]);export{b as __pageData,g as default};
