import{_ as s,c as i,o as a,V as e}from"./chunks/framework.qP9-rlTe.js";const g=JSON.parse('{"title":"构建主题","description":"","frontmatter":{},"headers":[],"relativePath":"zh/themes/app-themes/build-a-theme.md","filePath":"zh/themes/app-themes/build-a-theme.md","lastUpdated":1705557346000}'),n={name:"zh/themes/app-themes/build-a-theme.md"},l=e(`<h1 id="构建主题" tabindex="-1">构建主题 <a class="header-anchor" href="#构建主题" aria-label="Permalink to &quot;构建主题&quot;">​</a></h1><hr><p>In this tutorial, you&#39;ll learn how to start developing a theme for Obsidian. Themes let you customize how Obsidian looks and feels, using CSS.<br> 在本教程中，您将学习如何开始为Obsidian开发主题。主题允许您使用 CSS 自定义Obsidian的外观和体验。</p><h2 id="学习内容" tabindex="-1">学习内容 <a class="header-anchor" href="#学习内容" aria-label="Permalink to &quot;学习内容&quot;">​</a></h2><p>完成本教程后，您将能够：</p><ul><li>配置用于开发Obsidian主题的环境。</li><li>使用 CSS 变量更改Obsidian的外观。</li><li>创建同时支持浅色和深色配色方案的主题。</li></ul><h2 id="先决条件" tabindex="-1">先决条件 <a class="header-anchor" href="#先决条件" aria-label="Permalink to &quot;先决条件&quot;">​</a></h2><p>若要完成本教程，需要：</p><ul><li><a href="https://git-scm.com/" target="_blank" rel="noreferrer">Git</a> 在本地计算机上已安装。</li><li>代码编辑器，例如  <a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">Visual Studio Code</a>。</li></ul><h2 id="第-1-步-下载示例主题" tabindex="-1">第 1 步：下载示例主题 <a class="header-anchor" href="#第-1-步-下载示例主题" aria-label="Permalink to &quot;第 1 步：下载示例主题&quot;">​</a></h2><p>在此步骤中，您需要将示例主题下载到库下 <code>.obsidian</code> 目录中的 <code>themes</code> 目录，以便 Obsidian 可以找到它。</p><p>您在本教程中使用的示例主题将在 <a href="https://github.com/obsidianmd/obsidian-sample-theme" target="_blank" rel="noreferrer">GitHub repository</a>中提供。</p><ol><li><p>打开终端窗口，将项目目录更改为该 <code>themes</code> 目录。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> path/to/vault/.obsidian/themes</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>用 Git 克隆示例主题。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/obsidianmd/obsidian-sample-theme.git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Sample Theme&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ol><blockquote><p>[!tip] 模板存储库</p><p>示例主题的存储库是 GitHub 模板存储库，这意味着您可以从示例主题创建自己的存储库。要了解如何操作，请参阅 <a href="https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-repository-from-a-template#creating-a-repository-from-a-template" target="_blank" rel="noreferrer">Creating a repository from a template</a>。</p><p>请记住在克隆示例主题时使用您自己的存储库的 URL。</p></blockquote><h2 id="第-2-步-启用主题" tabindex="-1">第 2 步：启用主题 <a class="header-anchor" href="#第-2-步-启用主题" aria-label="Permalink to &quot;第 2 步：启用主题&quot;">​</a></h2><ol><li>在Obsidian中，打开设置。</li><li>在侧边菜单中，选择外观。</li><li>在“主题”旁边，从下拉列表中选择“<strong>Sample Theme</strong>”。</li></ol><p>您已启用示例主题。接下来，我们将对其进行一些更改。</p><h2 id="第-3-步-更新-manifest" tabindex="-1">第 3 步：更新 manifest <a class="header-anchor" href="#第-3-步-更新-manifest" aria-label="Permalink to &quot;第 3 步：更新 manifest&quot;">​</a></h2><p>在此步骤中，您将通过更新 <code>manifest.json</code> 来重命名主题。manifest包含有关主题的信息，例如其名称和说明。</p><ol><li><p>在代码编辑器中打开 <code>manifest.json</code> 。</p></li><li><p>更改 <code>name</code> 名称，例如 <code>&quot;Disco Lights&quot;</code> .</p></li><li><p>将themes目录下的主题目录重命名为相同的名称。主题目录的名称必须与 <code>name</code> 中的 <code>manifest.json</code> 属性完全匹配。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Sample Theme&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Disco Lights&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>重新启动Obsidian以加载对清单的新更改。</p></li></ol><p>返回到“设置”→“外观”→“主题”，发现主题的名称已更改。</p><p>请记住，每当您对 <code>manifest.json</code> 进行更改后，请重新启动 Obsidian。</p><h2 id="第-4-步-更改字体" tabindex="-1">第 4 步：更改字体 <a class="header-anchor" href="#第-4-步-更改字体" aria-label="Permalink to &quot;第 4 步：更改字体&quot;">​</a></h2><p>Obsidian使用 <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties" target="_blank" rel="noreferrer">CSS variables</a> 来设置用户界面的样式。在此步骤中，您将使用 CSS 变量来更改编辑器中的字体。</p><ol><li><p>创建一个新笔记，例如“主题开发”。</p></li><li><p>在笔记中输入以下文本：</p><div class="language-md vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Themes let you make [</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;--shiki-light-text-decoration:underline;--shiki-dark-text-decoration:underline;">Obsidian</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">](</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;--shiki-light-text-decoration:underline;--shiki-dark-text-decoration:underline;">https://obsidian.md</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) look the way </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">**you**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> want it.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>在 <code>theme.css</code> 中，添加以下内容：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --font-text-theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Georgia</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ol><p>编辑器将使用您定义的字体显示笔记。</p><h2 id="第-5-步-更改背景颜色" tabindex="-1">第 5 步：更改背景颜色 <a class="header-anchor" href="#第-5-步-更改背景颜色" aria-label="Permalink to &quot;第 5 步：更改背景颜色&quot;">​</a></h2><p>主题可以支持浅色和深色配色方案。在 <code>.theme-light</code> 或 <code>.theme-dark</code>下 定义 CSS 变量。</p><ol><li><p>在  <code>theme.css</code> 中，添加以下内容：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.theme-dark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --background-primary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#18004F</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --background-secondary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#220070</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.theme-light</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --background-primary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#ECE4FF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --background-secondary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#D9C9FF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li><li><p>在Obsidian中，打开设置。</p></li><li><p>在“外观”下，在“浅色”和“深色”之间切换基本配色方案。</p></li></ol><p>您将看到Obsidian根据您选择的配色方案呈现颜色。尝试将颜色更改为 <code>red</code> 、 <code>green</code> 或 <code>blue</code> 进行更强烈的更改。</p><h2 id="第-6-步-更改输入悬停边框颜色" tabindex="-1">第 6 步：更改输入悬停边框颜色 <a class="header-anchor" href="#第-6-步-更改输入悬停边框颜色" aria-label="Permalink to &quot;第 6 步：更改输入悬停边框颜色&quot;">​</a></h2><p>当您希望主题中的每个子元素都可以访问变量时，通常会使用 <code>:root</code> 选择器。该选择器通常保存了插件变量。</p><p>下面是一个示例来说明其用法：</p><blockquote><p>[!NOTE] 示例 如果想在 Obsidian 中的不同位置找到的输入字段，例如设置或文本内容。要定义针对此输入字段的样式，我们可以使用 <code>:root</code> 选择器。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:root</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --input-focus-border-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">Highlight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --input-focus-outline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Canvas;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --input-unfocused-border-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">transparent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --input-disabled-border-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">transparent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --input-hover-border-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">black</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* Default Input Variables for Root */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></blockquote><p>现在，让我们修改 CSS 中的悬停边框颜色：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:root</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">   --input-hover-border-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Change from Black to Red */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在此更新中，当您将鼠标悬停在任何输入字段上时，边框颜色将变为亮红色。</p><blockquote><p>[!NOTE]</p><p>在定义浅色和深色主题都相同的样式时，建议使用 <code>body</code> 选择器。</p><p>仅当您希望在浅色和深色主题之间切换时更改样式时，才使用 <code>.theme-dark</code> 或 <code>.theme-light</code> 选择器。</p><p><code>:root</code> 需要谨慎使用。尽量将变量放在<code>body</code>、 <code>.theme-dark</code> 或 <code>.theme-light</code> 选择器。</p></blockquote><h2 id="第-7-步-发现正在使用的-css-变量" tabindex="-1">第 7 步：发现正在使用的 CSS 变量 <a class="header-anchor" href="#第-7-步-发现正在使用的-css-变量" aria-label="Permalink to &quot;第 7 步：发现正在使用的 CSS 变量&quot;">​</a></h2><p>Obsidian公开了 400 多个不同的 CSS 变量，用于自定义用户界面的不同部分。在此步骤中，您将找到用于更改功能区背景的 CSS 变量。</p><ol><li>在 中Obsidian，按 <code>Ctrl</code>+<code>Shift</code>+<code>I</code>（MacOS 按 <code>Cmd</code>+<code>Option</code>+<code>I</code> ）打开开发人员工具。</li><li>打开“<strong>Sources</strong> ”选项卡。</li><li>在“<strong>Page → top → obsidian.md</strong>,”下，选择“<strong>app.css</strong>”。</li><li>滚动到顶部 <code>app.css</code> 以查找所有可用的 CSS 变量。</li><li>通过按 <code>Ctrl</code> + <code>F</code> （或macOS 上的 <code>Cmd</code>  + <code>F</code> ）并键入“ --ribbon-”来搜索与功能区相关的变量。请注意两个空格，它们返回定义而不是它们的用法。</li></ol><p>其中一个结果是 <code>--ribbon-background</code> ，很接近我们要找的。您还可以检索 HTML 以查找特定元素使用的 CSS 变量。</p><ol><li>在开发人员工具的左上角，选择看起来像矩形顶部光标的图标。</li><li>在“样式”选项卡中，在“开发人员工具”的右侧，您现在可以看到应用于所选元素的 CSS，例如 <code>background-color: var(--ribbon-background)</code> .</li></ol><p>现在您知道 <code>--ribbon-background</code> 控制功能区背景颜色，请将以下内容添加到 <code>theme.css</code> ：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --ribbon-background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">magenta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>在本教程中，你已构建了第一个Obsidian主题。您已经修改了主题并重新加载了它，并在Obsidian应用了更改。您还了解了如何找到 CSS 变量来设置用户界面特定部分的样式。</p>`,47),t=[l];function p(h,r,d,o,k,c){return a(),i("div",null,t)}const E=s(n,[["render",p]]);export{g as __pageData,E as default};
